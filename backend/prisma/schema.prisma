// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  username String  @unique
  password String
  desc     String?
  imgUrl   String?

  posts      Post[]    @relation(name: "usersPosts")
  likes      Post[]    @relation(name: "userLikePosts")
  comments   Comment[] @relation(name: "usersComments")
  followedBy User[]    @relation(name: "userFollows")
  following  User[]    @relation(name: "userFollows")
}

model Post {
  id        String   @id @default(uuid())
  text      String
  timestamp DateTime @default(now())

  author   User      @relation(name: "usersPosts", fields: [authorId], references: [id])
  authorId String
  likes    User[]    @relation(name: "userLikePosts")
  comments Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  timestamp DateTime @default(now())

  author   User   @relation(name: "usersComments", fields: [authorId], references: [id])
  authorId String
  post     Post   @relation(fields: [postId], references: [id])
  postId   String
}
